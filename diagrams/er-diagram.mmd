%% MERN Blog Platform â€” Entity Relationship Diagram
%% Open this file in VS Code with Mermaid support to preview.

%%{init: { 'theme': 'neutral', 'themeCSS': '.mermaid { background-color: transparent; }' }}%%

erDiagram
    USER {
        ObjectId _id PK
        string username
        string email
        string authMethod
        boolean isEmailVerified
        string role
        boolean isBanned
        date lastLogin
    }

    ADMIN {
        ObjectId _id PK
        string username
        string email
        string role
        boolean isActive
    }

    POST {
        ObjectId _id PK
        string title
        string slug
        string status
        number viewsCount
        date publishedAt
    }

    CATEGORY {
        ObjectId _id PK
        string categoryName
    }

    COMMENT {
        ObjectId _id PK
        string content
        boolean isEdited
    }

    NOTIFICATION {
        ObjectId _id PK
        string title
        string type
        boolean isRead
        string priority
    }

    PLAN {
        ObjectId _id PK
        string planName
        string tier
        number price
        number postLimit
        boolean isActive
    }

    PAYMENT {
        ObjectId _id PK
        string reference
        string currency
        string status
        number amount
    }

    PLAN_HISTORY {
        ObjectId _id PK
        string action
        number oldPrice
        number newPrice
        date cycleStart
        date cycleEnd
    }

    %% Core one-to-many relationships
    CATEGORY ||--o{ POST : categorizes
    USER ||--o{ POST : creates
    USER ||--o{ COMMENT : writes
    POST ||--o{ COMMENT : has
    USER ||--o{ NOTIFICATION : receives
    USER ||--o{ PAYMENT : makes
    PLAN ||--o{ PAYMENT : billed-for
    PLAN ||--o{ USER : assigned-to
    USER ||--o{ PLAN_HISTORY : changes
    PLAN ||--o{ PLAN_HISTORY : from/to

    %% Many-to-many (modeled via arrays on documents)
    USER }o--o{ USER : follows
    USER }o--o{ POST : likes/dislikes/viewers
    COMMENT }o--o{ USER : liked-by

    %% Self-referential replies (threaded comments)
    COMMENT ||--o{ COMMENT : replies

    %% Notes:
    %% - Admin entity is separate; not directly referenced by other docs in the models.
    %% - ProfanityFilter is a utility list and not tied via refs; omitted from relationships.
